//go:build !ignore_autogenerated

// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/GoogleCloudPlatform/k8s-config-connector/apis/bigtable/v1beta1"
	k8sv1alpha1 "github.com/GoogleCloudPlatform/k8s-config-connector/pkg/apis/k8s/v1alpha1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthorizedViewIdentity) DeepCopyInto(out *AuthorizedViewIdentity) {
	*out = *in
	if in.parent != nil {
		in, out := &in.parent, &out.parent
		*out = new(v1beta1.TableIdentity)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthorizedViewIdentity.
func (in *AuthorizedViewIdentity) DeepCopy() *AuthorizedViewIdentity {
	if in == nil {
		return nil
	}
	out := new(AuthorizedViewIdentity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthorizedViewRef) DeepCopyInto(out *AuthorizedViewRef) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthorizedViewRef.
func (in *AuthorizedViewRef) DeepCopy() *AuthorizedViewRef {
	if in == nil {
		return nil
	}
	out := new(AuthorizedViewRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupIdentity) DeepCopyInto(out *BackupIdentity) {
	*out = *in
	if in.parent != nil {
		in, out := &in.parent, &out.parent
		*out = new(ClusterIdentity)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupIdentity.
func (in *BackupIdentity) DeepCopy() *BackupIdentity {
	if in == nil {
		return nil
	}
	out := new(BackupIdentity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupRef) DeepCopyInto(out *BackupRef) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupRef.
func (in *BackupRef) DeepCopy() *BackupRef {
	if in == nil {
		return nil
	}
	out := new(BackupRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigtableAuthorizedView) DeepCopyInto(out *BigtableAuthorizedView) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigtableAuthorizedView.
func (in *BigtableAuthorizedView) DeepCopy() *BigtableAuthorizedView {
	if in == nil {
		return nil
	}
	out := new(BigtableAuthorizedView)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BigtableAuthorizedView) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigtableAuthorizedViewList) DeepCopyInto(out *BigtableAuthorizedViewList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]BigtableAuthorizedView, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigtableAuthorizedViewList.
func (in *BigtableAuthorizedViewList) DeepCopy() *BigtableAuthorizedViewList {
	if in == nil {
		return nil
	}
	out := new(BigtableAuthorizedViewList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BigtableAuthorizedViewList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigtableAuthorizedViewObservedState) DeepCopyInto(out *BigtableAuthorizedViewObservedState) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigtableAuthorizedViewObservedState.
func (in *BigtableAuthorizedViewObservedState) DeepCopy() *BigtableAuthorizedViewObservedState {
	if in == nil {
		return nil
	}
	out := new(BigtableAuthorizedViewObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigtableAuthorizedViewParent) DeepCopyInto(out *BigtableAuthorizedViewParent) {
	*out = *in
	out.TableRef = in.TableRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigtableAuthorizedViewParent.
func (in *BigtableAuthorizedViewParent) DeepCopy() *BigtableAuthorizedViewParent {
	if in == nil {
		return nil
	}
	out := new(BigtableAuthorizedViewParent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigtableAuthorizedViewSpec) DeepCopyInto(out *BigtableAuthorizedViewSpec) {
	*out = *in
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	out.BigtableAuthorizedViewParent = in.BigtableAuthorizedViewParent
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigtableAuthorizedViewSpec.
func (in *BigtableAuthorizedViewSpec) DeepCopy() *BigtableAuthorizedViewSpec {
	if in == nil {
		return nil
	}
	out := new(BigtableAuthorizedViewSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigtableAuthorizedViewStatus) DeepCopyInto(out *BigtableAuthorizedViewStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]k8sv1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.ExternalRef != nil {
		in, out := &in.ExternalRef, &out.ExternalRef
		*out = new(string)
		**out = **in
	}
	if in.ObservedState != nil {
		in, out := &in.ObservedState, &out.ObservedState
		*out = new(BigtableAuthorizedViewObservedState)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigtableAuthorizedViewStatus.
func (in *BigtableAuthorizedViewStatus) DeepCopy() *BigtableAuthorizedViewStatus {
	if in == nil {
		return nil
	}
	out := new(BigtableAuthorizedViewStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigtableBackup) DeepCopyInto(out *BigtableBackup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigtableBackup.
func (in *BigtableBackup) DeepCopy() *BigtableBackup {
	if in == nil {
		return nil
	}
	out := new(BigtableBackup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BigtableBackup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigtableBackupList) DeepCopyInto(out *BigtableBackupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]BigtableBackup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigtableBackupList.
func (in *BigtableBackupList) DeepCopy() *BigtableBackupList {
	if in == nil {
		return nil
	}
	out := new(BigtableBackupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BigtableBackupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigtableBackupObservedState) DeepCopyInto(out *BigtableBackupObservedState) {
	*out = *in
	if in.SourceBackup != nil {
		in, out := &in.SourceBackup, &out.SourceBackup
		*out = new(string)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
	if in.EndTime != nil {
		in, out := &in.EndTime, &out.EndTime
		*out = new(string)
		**out = **in
	}
	if in.SizeBytes != nil {
		in, out := &in.SizeBytes, &out.SizeBytes
		*out = new(int64)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigtableBackupObservedState.
func (in *BigtableBackupObservedState) DeepCopy() *BigtableBackupObservedState {
	if in == nil {
		return nil
	}
	out := new(BigtableBackupObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigtableBackupParent) DeepCopyInto(out *BigtableBackupParent) {
	*out = *in
	out.ClusterRef = in.ClusterRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigtableBackupParent.
func (in *BigtableBackupParent) DeepCopy() *BigtableBackupParent {
	if in == nil {
		return nil
	}
	out := new(BigtableBackupParent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigtableBackupSpec) DeepCopyInto(out *BigtableBackupSpec) {
	*out = *in
	out.BigtableBackupParent = in.BigtableBackupParent
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.SourceTableRef != nil {
		in, out := &in.SourceTableRef, &out.SourceTableRef
		*out = new(v1beta1.TableRef)
		**out = **in
	}
	if in.ExpireTime != nil {
		in, out := &in.ExpireTime, &out.ExpireTime
		*out = new(string)
		**out = **in
	}
	if in.BackupType != nil {
		in, out := &in.BackupType, &out.BackupType
		*out = new(string)
		**out = **in
	}
	if in.HotToStandardTime != nil {
		in, out := &in.HotToStandardTime, &out.HotToStandardTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigtableBackupSpec.
func (in *BigtableBackupSpec) DeepCopy() *BigtableBackupSpec {
	if in == nil {
		return nil
	}
	out := new(BigtableBackupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigtableBackupStatus) DeepCopyInto(out *BigtableBackupStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]k8sv1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.ExternalRef != nil {
		in, out := &in.ExternalRef, &out.ExternalRef
		*out = new(string)
		**out = **in
	}
	if in.ObservedState != nil {
		in, out := &in.ObservedState, &out.ObservedState
		*out = new(BigtableBackupObservedState)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigtableBackupStatus.
func (in *BigtableBackupStatus) DeepCopy() *BigtableBackupStatus {
	if in == nil {
		return nil
	}
	out := new(BigtableBackupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigtableCluster) DeepCopyInto(out *BigtableCluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigtableCluster.
func (in *BigtableCluster) DeepCopy() *BigtableCluster {
	if in == nil {
		return nil
	}
	out := new(BigtableCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BigtableCluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigtableClusterList) DeepCopyInto(out *BigtableClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]BigtableCluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigtableClusterList.
func (in *BigtableClusterList) DeepCopy() *BigtableClusterList {
	if in == nil {
		return nil
	}
	out := new(BigtableClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BigtableClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigtableClusterObservedState) DeepCopyInto(out *BigtableClusterObservedState) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigtableClusterObservedState.
func (in *BigtableClusterObservedState) DeepCopy() *BigtableClusterObservedState {
	if in == nil {
		return nil
	}
	out := new(BigtableClusterObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigtableClusterParent) DeepCopyInto(out *BigtableClusterParent) {
	*out = *in
	out.InstanceRef = in.InstanceRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigtableClusterParent.
func (in *BigtableClusterParent) DeepCopy() *BigtableClusterParent {
	if in == nil {
		return nil
	}
	out := new(BigtableClusterParent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigtableClusterSpec) DeepCopyInto(out *BigtableClusterSpec) {
	*out = *in
	out.BigtableClusterParent = in.BigtableClusterParent
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ServeNodes != nil {
		in, out := &in.ServeNodes, &out.ServeNodes
		*out = new(int32)
		**out = **in
	}
	if in.NodeScalingFactor != nil {
		in, out := &in.NodeScalingFactor, &out.NodeScalingFactor
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigtableClusterSpec.
func (in *BigtableClusterSpec) DeepCopy() *BigtableClusterSpec {
	if in == nil {
		return nil
	}
	out := new(BigtableClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigtableClusterStatus) DeepCopyInto(out *BigtableClusterStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]k8sv1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.ExternalRef != nil {
		in, out := &in.ExternalRef, &out.ExternalRef
		*out = new(string)
		**out = **in
	}
	if in.ObservedState != nil {
		in, out := &in.ObservedState, &out.ObservedState
		*out = new(BigtableClusterObservedState)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigtableClusterStatus.
func (in *BigtableClusterStatus) DeepCopy() *BigtableClusterStatus {
	if in == nil {
		return nil
	}
	out := new(BigtableClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigtableLogicalView) DeepCopyInto(out *BigtableLogicalView) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigtableLogicalView.
func (in *BigtableLogicalView) DeepCopy() *BigtableLogicalView {
	if in == nil {
		return nil
	}
	out := new(BigtableLogicalView)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BigtableLogicalView) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigtableLogicalViewList) DeepCopyInto(out *BigtableLogicalViewList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]BigtableLogicalView, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigtableLogicalViewList.
func (in *BigtableLogicalViewList) DeepCopy() *BigtableLogicalViewList {
	if in == nil {
		return nil
	}
	out := new(BigtableLogicalViewList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BigtableLogicalViewList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigtableLogicalViewObservedState) DeepCopyInto(out *BigtableLogicalViewObservedState) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigtableLogicalViewObservedState.
func (in *BigtableLogicalViewObservedState) DeepCopy() *BigtableLogicalViewObservedState {
	if in == nil {
		return nil
	}
	out := new(BigtableLogicalViewObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigtableLogicalViewSpec) DeepCopyInto(out *BigtableLogicalViewSpec) {
	*out = *in
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigtableLogicalViewSpec.
func (in *BigtableLogicalViewSpec) DeepCopy() *BigtableLogicalViewSpec {
	if in == nil {
		return nil
	}
	out := new(BigtableLogicalViewSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigtableLogicalViewStatus) DeepCopyInto(out *BigtableLogicalViewStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]k8sv1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.ExternalRef != nil {
		in, out := &in.ExternalRef, &out.ExternalRef
		*out = new(string)
		**out = **in
	}
	if in.ObservedState != nil {
		in, out := &in.ObservedState, &out.ObservedState
		*out = new(BigtableLogicalViewObservedState)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigtableLogicalViewStatus.
func (in *BigtableLogicalViewStatus) DeepCopy() *BigtableLogicalViewStatus {
	if in == nil {
		return nil
	}
	out := new(BigtableLogicalViewStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterIdentity) DeepCopyInto(out *ClusterIdentity) {
	*out = *in
	if in.parent != nil {
		in, out := &in.parent, &out.parent
		*out = new(v1beta1.InstanceIdentity)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterIdentity.
func (in *ClusterIdentity) DeepCopy() *ClusterIdentity {
	if in == nil {
		return nil
	}
	out := new(ClusterIdentity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterRef) DeepCopyInto(out *ClusterRef) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterRef.
func (in *ClusterRef) DeepCopy() *ClusterRef {
	if in == nil {
		return nil
	}
	out := new(ClusterRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogicalView) DeepCopyInto(out *LogicalView) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.DeletionProtection != nil {
		in, out := &in.DeletionProtection, &out.DeletionProtection
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogicalView.
func (in *LogicalView) DeepCopy() *LogicalView {
	if in == nil {
		return nil
	}
	out := new(LogicalView)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogicalViewIdentity) DeepCopyInto(out *LogicalViewIdentity) {
	*out = *in
	if in.parent != nil {
		in, out := &in.parent, &out.parent
		*out = new(LogicalViewParent)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogicalViewIdentity.
func (in *LogicalViewIdentity) DeepCopy() *LogicalViewIdentity {
	if in == nil {
		return nil
	}
	out := new(LogicalViewIdentity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogicalViewParent) DeepCopyInto(out *LogicalViewParent) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogicalViewParent.
func (in *LogicalViewParent) DeepCopy() *LogicalViewParent {
	if in == nil {
		return nil
	}
	out := new(LogicalViewParent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogicalViewRef) DeepCopyInto(out *LogicalViewRef) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogicalViewRef.
func (in *LogicalViewRef) DeepCopy() *LogicalViewRef {
	if in == nil {
		return nil
	}
	out := new(LogicalViewRef)
	in.DeepCopyInto(out)
	return out
}
